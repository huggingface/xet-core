# This file is autogenerated by maturin v1.7.0
# To update, run
#
#    maturin generate-ci github
#
name: Release

on:
  push:
    #    branches:
    #      - main
    #      - master
    tags:
      - 'v20*'
    pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  linux:
    runs-on:
      group: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: cpu-high
            target: x86_64
            features: ""
          - runner: cpu-high
            target: aarch64
            features: "--features openssl_vendored"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release ${{ matrix.platform.features }} --out dist
          sccache: 'true'
          manylinux: auto
          working-directory: hf_xet
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.platform.target }}
          path: hf_xet/dist

  musllinux:
    runs-on:
      group: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: cpu-high
            target: x86_64
          - runner: cpu-high
            target: aarch64
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --features openssl_vendored --out dist
          sccache: 'true'
          manylinux: musllinux_1_2
          working-directory: hf_xet
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-musllinux-${{ matrix.platform.target }}
          path: hf_xet/dist

  windows:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: windows-latest
            target: x64
          - runner: windows-latest
            target: x86
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
          architecture: ${{ matrix.platform.target }}
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist
          sccache: 'true'
          working-directory: hf_xet
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-windows-${{ matrix.platform.target }}
          path: hf_xet/dist

  macos:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: macos-12
            target: x86_64
          - runner: macos-14
            target: aarch64
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist
          sccache: 'true'
          working-directory: hf_xet
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-${{ matrix.platform.target }}
          path: hf_xet/dist

  sdist:
    runs-on:
      group: cpu-high
    steps:
      - uses: actions/checkout@v4
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
          working-directory: hf_xet
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: wheels-sdist
          path: hf_xet/dist

  release-pypi:
    name: Release PyPi
    runs-on:
      group: cpu-low
    if: false #"startsWith(github.ref, 'refs/tags/')"
    needs: [ linux, musllinux, windows, macos, sdist ]
    steps:
      - uses: actions/download-artifact@v4
      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --non-interactive --skip-existing wheels-*/*

  release-github:
    name: Release GitHub
    runs-on:
      group: cpu-low
    permissions:
      contents: write
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [ linux, musllinux, windows, macos, sdist ]
    steps:
      - uses: actions/download-artifact@v4
      - name: Publish to GitHub Releases
        run: |
          gh release upload ${{github.event.release.tag_name}} wheels-*/*