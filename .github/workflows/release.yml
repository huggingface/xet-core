# This file is autogenerated by maturin v1.7.0
# To update, run
#
#    maturin generate-ci github
#
name: Release

on:
  push:
    branches: 
      - main
  workflow_dispatch:
    inputs:
      tag:
        description: 'Semantic version for PyPI release (tag will share the same name)'
        required: true
        default: 'v0.1.0'

permissions:
  contents: read

jobs:
  linux:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: ubuntu-22.04
            target: x86_64
            manylinux: auto
            features: "--features openssl_vendored"
          - runner: ubuntu-22.04
            target: aarch64
            manylinux: manylinux_2_28
            features: "--features openssl_vendored"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Update version in toml
        run: |
          TAG=${{ github.event.inputs.tag }}
          VERSION=${TAG#v}
          if [ -n "$VERSION" ]; then
            sed -i '/^version /s/=.*$/= "'"$VERSION"'"/' hf_xet/Cargo.toml
          fi
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release ${{ matrix.platform.features }} --out dist
          sccache: 'true'
          manylinux: ${{ matrix.platform.manylinux }}
          working-directory: hf_xet
          before-script-linux: |
            if command -v apt-get &> /dev/null; then
                apt-get update && apt-get install libssl-dev libatomic-ops-dev -y
            elif command -v yum &> /dev/null; then
                yum install openssl-devel devtoolset-10-libatomic-devel perl-IPC-Cmd -y
            else
                echo "Neither apt-get nor yum is installed. Please install a package manager."
                exit 1
            fi
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.platform.target }}
          path: hf_xet/dist

  musllinux:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: ubuntu-22.04
            target: x86_64
            features: "--features openssl_vendored"
          - runner: ubuntu-22.04
            target: aarch64
            features: "--features openssl_vendored"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Update version in toml
        run: |
          TAG=${{ github.event.inputs.tag }}
          VERSION=${TAG#v}
          if [ -n "$VERSION" ]; then
            sed -i '/^version /s/=.*$/= "'"$VERSION"'"/' hf_xet/Cargo.toml
          fi
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release ${{ matrix.platform.features }} --out dist
          sccache: 'true'
          manylinux: musllinux_1_2
          working-directory: hf_xet
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-musllinux-${{ matrix.platform.target }}
          path: hf_xet/dist

  windows:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: windows-latest
            target: x64
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
          architecture: ${{ matrix.platform.target }}
      - name: Update version in toml
        shell: bash
        run: |
          TAG=${{ github.event.inputs.tag }}
          VERSION=${TAG#v}
          if [ -n "$VERSION" ]; then
            sed -i '/^version /s/=.*$/= "'"$VERSION"'"/' hf_xet/Cargo.toml
          fi
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist
          sccache: 'true'
          working-directory: hf_xet
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-windows-${{ matrix.platform.target }}
          path: hf_xet/dist

  macos:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: macos-13
            target: x86_64
          - runner: macos-14
            target: aarch64
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Update version in toml
        run: |
          TAG=${{ github.event.inputs.tag }}
          VERSION=${TAG#v}
          if [ -n "$VERSION" ]; then
            sed -i '' '/^version /s/=.*$/= "'"$VERSION"'"/' hf_xet/Cargo.toml
          fi
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist
          sccache: 'true'
          working-directory: hf_xet
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-${{ matrix.platform.target }}
          path: hf_xet/dist

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Update version in toml
        run: |
          TAG=${{ github.event.inputs.tag }}
          VERSION=${TAG#v}
          if [ -n "$VERSION" ]; then
            sed -i '/^version /s/=.*$/= "'"$VERSION"'"/' hf_xet/Cargo.toml
          fi
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
          working-directory: hf_xet
      - name: Patch sdist
        run: |
          pushd hf_xet/dist
          DISTFILE=$(ls -tr | grep hf_xet- | tail -n 1)
          DISTNAME=${DISTFILE%.tar.gz}
          # maturin sdist will overwrite an edited pyproject.toml in the repo root, so we need to 
          # update the python path in the built pyproject.toml to account for that.
          tar -xvzf ${DISTFILE}
          sed -i '/^python\-source =/ s/= .*/= "hf_xet\/python"/' ${DISTNAME}/pyproject.toml
          tar -cvzf ${DISTFILE} ${DISTNAME}
          rm -rf ${DISTNAME} 
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: wheels-sdist
          path: hf_xet/dist

  release-pypi:
    name: Release PyPi
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'workflow_dispatch' }}
    needs: [github-release]
    permissions:
      # Use to sign the release artifacts
      id-token: write
      # Used to upload release artifacts
      contents: write
      # Used to generate artifact attestation
      attestations: write
    environment: release
    steps:
      - uses: actions/download-artifact@v4
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-path: 'wheels-*/*'
      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        with:
          command: upload
          args: --non-interactive --skip-existing wheels-*/*

  github-release:
    name: Create GitHub release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: ${{ github.event_name == 'workflow_dispatch' }}
    needs: [ linux, musllinux, windows, macos, sdist ]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
      - name: Create GitHub Release
        env: 
          GH_TOKEN: ${{ github.token }}
        run: |
          gh release create ${{ github.event.inputs.tag}} wheels-*/* --generate-notes --prerelease --target ${{github.sha}}
